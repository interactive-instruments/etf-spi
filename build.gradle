///////////////////////////////////////////////////////////////////////////////////////
//
// ETF-SPI
//
///////////////////////////////////////////////////////////////////////////////////////

buildscript {
    repositories {
        maven {
            url "https://services.interactive-instruments.de/etfdev-af/plugins-releases-local"
            credentials {
                // Our repository requires authenticating
                username 'ii-bda'
                password 'AP7mb4WA6F1ckdZkaE8Qx8GSowt'
            }}
    }
    dependencies {
        classpath group: 'de.interactive_instruments.bda', name: 'etf-bda', version: '[1.0.29,1.0.99]'
    }
    dependencies {
        ant.unjar src: configurations.classpath.files.find {it.path.contains('etf')}, dest: 'build/gradle'
    }
}
apply from: 'build/gradle/ii-bda.gradle'

///////////////////////////////////////////////////////////////////////////////////////

group = 'de.interactive_instruments.etf'
description = 'ETF Service provider interface'

dependencies {
    compileOnly group: 'de.interactive_instruments', name: 'ii-commons-util', version:'3.0.0'+project.snapshotSuffix
    compileOnly group: 'de.interactive_instruments.etf', name: 'etf-core', version:'1.2.0'+project.snapshotSuffix

    compileOnly group: 'commons-collections', name: 'commons-collections', version: etf_commonsCollectionsVersion

    testCompile group: 'org.slf4j', name: 'slf4j-api', version: etf_slf4jApiVersion
    testCompile group: 'junit', name: 'junit', version: etf_junitTestVersion
    testCompile group: 'de.interactive_instruments', name: 'ii-commons-util', version:'3.0.0'+project.snapshotSuffix
    testCompile group: 'de.interactive_instruments.etf', name: 'etf-core', version:'1.2.0'+project.snapshotSuffix
    testCompile group: 'de.interactive_instruments.etf.test', name: 'etf-unittest', version:'1.1.1'+project.snapshotSuffix
}

javadoc {
    destinationDir = file("$projectDir/docs/javadoc")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    // archives javadocJar
}
